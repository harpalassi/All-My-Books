{"version":3,"sources":["components/Header.js","components/BookResults.js","pages/Saved.js","components/SearchForm.js","utils/API.js","components/Book.js","components/BooksContainer.js","pages/Search.js","components/Navbar.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","BookResults","props","title","children","Saved","state","resultTitle","components_Header","components_BookResults","this","Component","SearchForm","onChange","handleInputChange","value","type","name","placeholder","onClick","handleFormSubmit","require","config","API","search","query","axios","get","Book","authors","thumbnail","src","alt","description","href","link","target","BooksContainer","result","searchBooks","then","res","_this","setState","data","items","catch","err","console","log","event","Object","defineProperty","preventDefault","components_SearchForm","map","components_Book","key","id","volumeInfo","infoLink","imageLinks","author","Search","components_BooksContainer","Navbar","Link","to","App","BrowserRouter","components_Navbar","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f585b00b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"title\">\n        <h1>(React) Google Books Search</h1>\n        <h4>Search and Save Books of Interest</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst BookResults = props => {\n  return (\n    <div className=\"book-results\">\n      <h5>{props.title}</h5>\n      {props.children}\n    </div>\n  );\n};\n\nexport default BookResults;\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport BookResults from \"../components/BookResults\";\nimport { runInThisContext } from \"vm\";\n\nclass Saved extends Component {\n  state = {\n    resultTitle: \"Saved Books\"\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <BookResults title={this.state.resultTitle} />\n      </div>\n    );\n  }\n}\n\nexport default Saved;\n","import React from \"react\";\n\nconst SearchForm = props => {\n  return (\n    <form>\n      <div className=\"search-form\">\n        <h5>Book Search</h5>\n        <div className=\"input-field\">\n          <input\n            onChange={props.handleInputChange}\n            value={props.value}\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Enter Book Here\"\n          />\n        </div>\n        <button\n          className=\"btn waves-effect waves-light\"\n          type=\"submit\"\n          name=\"submit\"\n          onClick={props.handleFormSubmit}\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import axios from \"axios\";\nrequire(\"dotenv\").config();\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\nconst APIKEY = \"&key=AIzaSyBlx8WiirxVWdhmsTFiYeEM2QlQq8Nf1U0\";\n\n// + process.env.REACT_APP_GOOGLE_BOOKS;\n\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL + query + APIKEY);\n  }\n};\n","import React from \"react\";\n\nconst Book = props => {\n  return (\n    <div className=\"book\">\n      <h6 className=\"book-title\">{props.title}</h6>\n      <span className=\"book-authors\">by {props.authors}</span>\n      <div className=\"book-details\">\n        {props.thumbnail ? (\n          <img className=\"book-img\" src={props.thumbnail} alt=\"\" />\n        ) : (\n          <span />\n        )}\n        <span className=\"book-text\">{props.description}</span>\n      </div>\n      <div className=\"book-btn\">\n        <a\n          href={props.link}\n          className=\"waves-effect waves-light btn\"\n          target=\"_blank\"\n        >\n          View\n        </a>\n        <a className=\"waves-effect waves-light btn\">Save</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport API from \"../utils/API\";\nimport BookResults from \"./BookResults\";\nimport Book from \"./Book\";\n\nclass BooksContainer extends Component {\n  state = {\n    result: [],\n    search: \"\",\n    resultTitle: \"Results\"\n  };\n\n  componentDidUpdate() {\n    console.log(this.state.result);\n  }\n\n  searchBooks = query => {\n    API.search(query)\n      .then(res => this.setState({ result: res.data.items }))\n      .catch(err => console.log(err));\n    this.setState({ search: \"\" });\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBooks(this.state.search);\n    // console.log(this.state.search);\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchForm\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <BookResults title={this.state.resultTitle}>\n          {this.state.result ? (\n            this.state.result.map(result => (\n              <Book\n                key={result.id}\n                title={result.volumeInfo.title}\n                link={result.volumeInfo.infoLink}\n                thumbnail={\n                  result.volumeInfo.imageLinks\n                    ? result.volumeInfo.imageLinks.thumbnail\n                    : {}\n                }\n                description={result.volumeInfo.description}\n                authors={\n                  result.volumeInfo.authors\n                    ? result.volumeInfo.authors.map(author => author + \" \")\n                    : \"Unknown\"\n                }\n              />\n            ))\n          ) : (\n            <h2 className=\"no-results\">No results!</h2>\n          )}\n        </BookResults>\n      </div>\n    );\n  }\n}\n\nexport default BooksContainer;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport BooksContainer from \"../components/BooksContainer\";\nconst Search = () => {\n  return (\n    <div>\n      <Header />\n      <BooksContainer />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper\">\n        <a href=\"#\" className=\"title\">\n          Google Books\n        </a>\n        <ul className=\"right\">\n          <li>\n            <Link to=\"/search\">Search</Link>\n          </li>\n          <li>\n            <Link to=\"/saved\">Saved</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Saved from \"./pages/Saved\";\r\nimport Search from \"./pages/Search\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navbar />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\" component={Search} />\r\n            <Route exact path=\"/search\" component={Search} />\r\n            <Route exact path=\"/saved\" component={Saved} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}